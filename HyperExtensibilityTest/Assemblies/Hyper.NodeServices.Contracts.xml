<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hyper.NodeServices.Contracts</name>
    </assembly>
    <members>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeActionReasonType">
            <summary>
            The reasons why the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> chose to take the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActionType"/> specified in the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.Unknown">
            <summary>
            Indicates that no reason was specified for the action taken by the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.MessageExpired">
            <summary>
            Indicates that the message expired before it could be processed by the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.PreviouslySeen">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> had already seen the message.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.UnintendedRecipient">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> was not an intended recipient.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.IntendedRecipient">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> was an intended recipient.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.DuplicateTaskId">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> generated a task ID for a task that was already running.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.MaxConcurrentTaskCountReached">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> has already reached its maximum number of concurrent tasks.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionReasonType.CancellationRequested">
            <summary>
            Indicates that the Cancel() method has been called on the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> and no new tasks are being started.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeActionType">
            <summary>
            Actions that a <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> can take when it receives a <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionType.None">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> was completely unable to recognize, forward, or otherwise process the message in any capacity.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionType.Accepted">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> accepted responsibility for processing the message.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionType.Ignored">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> disregarded the message for a valid and expected reason.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.HyperNodeActionType.Rejected">
            <summary>
            Indicates that the receiving <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> rejected the message because the message would have caused the service to enter an invalid state.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeActivityItem">
            <summary>
            Describes an activity event reported by a <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeActivityItem.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActivityItem"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeActivityItem.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActivityItem"/> using the specified agent.
            </summary>
            <param name="agent">The agent creating this instance.</param>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.EventDateTime">
            <summary>
            The date and time the event happened.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.Agent">
            <summary>
            The name of the agent reporting the activity event.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.Elapsed">
            <summary>
            The amount of time that has elapsed since the first <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActivityItem"/> was tracked for the task.
            This value may be null unless diagnostics are enabled.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.EventDescription">
            <summary>
            A description of the activity event.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.EventDetail">
            <summary>
            A longer, more detailed description of the activity event.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressPart">
            <summary>
            A numeric value representing the progress of a command module. This value may be used in conjunction
            with the <see cref="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressTotal"/> property to obtain a percentile.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressTotal">
            <summary>
            A numeric value representing the progress total of a command module. This value may be used in conjunction
            with the <see cref="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressPart"/> property to obtain a percentile.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressPercentage">
            <summary>
            Calculates the progress of the task as a percentile by dividing the <see cref="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressPart"/> property by the <see cref="P:Hyper.NodeServices.Contracts.HyperNodeActivityItem.ProgressTotal"/> property.
            This operation is arithmetically safe.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest">
            <summary>
            The primary request object used by <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> using the specified agent.
            </summary>
            <param name="createdByAgentName">The agent creating this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.IsProcessOptionSet(Hyper.NodeServices.Contracts.MessageProcessOptionFlags)">
            <summary>
            Checks whether the specified <see cref="T:Hyper.NodeServices.Contracts.MessageProcessOptionFlags"/> option flag was set.
            </summary>
            <param name="optionFlag">The <see cref="T:Hyper.NodeServices.Contracts.MessageProcessOptionFlags"/> value to check for.</param>
            <returns></returns>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.CreatedByAgentName">
            <summary>
            The name of the agent that created this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.CreationDateTime">
            <summary>
            The date and time this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> was created.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.MessageLifeSpan">
            <summary>
            Specifies how long this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> should live before it expires.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.IntendedRecipientNodeNames">
            <summary>
            A list of <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> names to which this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> is intended.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.SeenByNodeNames">
            <summary>
            A list of <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> names which have already seen this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.CommandName">
            <summary>
            The name of the command to execute.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.CommandRequestString">
            <summary>
            A string containing the request parameters for the command to execute.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.ForwardingPath">
            <summary>
            Contains the network path this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> should follow in order to arrive at all of the intended recipients.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.ForwardingTimeout">
            <summary>
            The amount of time to wait before any <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> gives up on receiving a response from a child node.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.ProcessOptionFlags">
            <summary>
            A bitwise combination of <see cref="T:Hyper.NodeServices.Contracts.MessageProcessOptionFlags"/> values indicating how this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> should be processed.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.ReturnTaskTrace">
            <summary>
            Indicates whether the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.ReturnTaskTrace"/> option flag was set.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.RunConcurrently">
            <summary>
            Indicates whether the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.RunConcurrently"/> option flag was set.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.CacheTaskProgress">
            <summary>
            Indicates whether the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.CacheTaskProgress"/> option flag was set.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageRequest.ExpirationDateTime">
            <summary>
            Calculates date and time at which this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> expires.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse">
            <summary>
            The primary response object used by <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/> using the specified responding node name.
            </summary>
            <param name="respondingNodeName">The name of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> that created this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/>.</param>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.TaskId">
            <summary>
            The ID of the task started as a result of the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>. This value
            may be null or white space if no task could be started.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.RespondingNodeName">
            <summary>
            The name of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> that sent this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.TotalRunTime">
            <summary>
            If the task completed, contains the total run time of the task.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.NodeAction">
            <summary>
            The <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActionType"/> taken by the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> in response to the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.NodeActionReason">
            <summary>
            Indicates why the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> chose to take the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActionType"/> reported in the <see cref="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.NodeAction"/> property.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.ProcessStatusFlags">
            <summary>
            A bitwise combination of <see cref="T:Hyper.NodeServices.Contracts.MessageProcessStatusFlags"/> values indicating what happened while the command was running.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.TaskTrace">
            <summary>
            If the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.ReturnTaskTrace"/> option flag was specified in the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>, contains a list of
            <see cref="T:Hyper.NodeServices.Contracts.HyperNodeActivityItem"/> objects tracing the progress of the task up until the point at which this <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/> was
            returned. If the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.RunConcurrently"/> option flag was specified in the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>, the task
            trace will likely be incomplete because the main thread could have completed before the task was finished.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.ChildResponses">
            <summary>
            Contains a list of <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/> objects returned by child nodes up until the point at which this
            <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/> was returned. If the <see cref="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.RunConcurrently"/> option
            flag was specified in the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>, the list will likely be incomplete because the main thread
            could have completed before the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> could be forwarded to all child nodes.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeMessageResponse.CommandResponseString">
            <summary>
            Contains the response string from the command that was executed.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodePath">
            <summary>
            Concrete implementation of <see cref="T:Hyper.NodeServices.Contracts.IPath`1"/> for HyperNode network path trees.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.IPath`1">
            <summary>
            Provides methods to traverse a path tree composed of <see cref="T:Hyper.NodeServices.Contracts.IVertex"/> objects.
            </summary>
            <typeparam name="TVertex"></typeparam>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.IPath`1.GetChildren(System.String)">
            <summary>
            Gets the immediate children of the <see cref="T:Hyper.NodeServices.Contracts.IVertex"/> with the specified key.
            </summary>
            <param name="parentKey">The key of the parent for which to find child nodes.</param>
            <returns></returns>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodePath.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Hyper.NodeServices.Contracts.HyperNodePath"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.HyperNodePath.GetChildren(System.String)">
            <summary>
            Gets the immediate children of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> with the specified name.
            </summary>
            <param name="parentKey">The name of the parent for which to find child nodes.</param>
            <returns></returns>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodePath.PathTree">
            <summary>
            A dictionary containing the full network path for the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.HyperNodeVertex">
            <summary>
            Concrete implementation of <see cref="T:Hyper.NodeServices.Contracts.IVertex"/> for HyperNode network paths.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.IVertex">
            <summary>
            Defines a node in a <see cref="T:Hyper.NodeServices.Contracts.IPath`1"/> tree.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.IVertex.Key">
            <summary>
            The unique key of the <see cref="T:Hyper.NodeServices.Contracts.IVertex"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Contracts.HyperNodeVertex.Key">
            <summary>
            The name of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> represented by this instance.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.IHyperNodeService">
            <summary>
            Processes <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> objects and returns <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageResponse"/> objects.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Contracts.IHyperNodeService.ProcessMessage(Hyper.NodeServices.Contracts.HyperNodeMessageRequest)">
            <summary>
            Processes and/or forwards the specified message.
            </summary>
            <param name="message">The <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> object to process.</param>
            <returns></returns>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.MessageProcessOptionFlags">
            <summary>
            Flags to indicate which processing options to use when the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> processes the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.None">
            <summary>
            Specifies that the recipient node should process this message synchronously without returning a task trace or caching activity events
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.ReturnTaskTrace">
            <summary>
            Specifies that the recipient node should return an activity event trace for this message.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.RunConcurrently">
            <summary>
            Specifies that the recipient node should run the request in a child thread.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessOptionFlags.CacheTaskProgress">
            <summary>
            Specifies that the recipient node should cache task progress for this message.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Contracts.MessageProcessStatusFlags">
            <summary>
            Flags that indicate what happened while a command was running in a <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.None">
            <summary>
            Indicates that the message was not processed
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.Success">
            <summary>
            Indicates that the message was processed successfully.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.Failure">
            <summary>
            Indicates that the message could not be processed.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.InvalidCommand">
            <summary>
            Indicates that the message contained an invalid command name.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.HadNonFatalErrors">
            <summary>
            Indicates that some non-fatal errors occurred while processing the message.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.HadWarnings">
            <summary>
            Indicates that some warnings occurred while processing the message.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.Cancelled">
            <summary>
            Indicates that the service was cancelled before it completed.
            </summary>
        </member>
        <member name="F:Hyper.NodeServices.Contracts.MessageProcessStatusFlags.InvalidCommandRequest">
            <summary>
            Indicates that the ICommandRequest implementation was invalid.
            </summary>
        </member>
    </members>
</doc>
