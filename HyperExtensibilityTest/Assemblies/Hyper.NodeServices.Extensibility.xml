<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hyper.NodeServices.Extensibility</name>
    </assembly>
    <members>
        <member name="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException">
            <summary>
            Thrown when an <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/> receives an invalid request.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException"/> class.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException"/> class with a default error message
            describing a type conversion error between the expected <see cref="T:Hyper.NodeServices.Contracts.Extensibility.ICommandRequest"/> type and the actual type.
            </summary>
            <param name="expectedType">The <see cref="T:System.Type"/> expected by the <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
            <param name="actualType">The <see cref="T:System.Type"/> actually received by the <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Hyper.NodeServices.Extensibility.Exceptions.InvalidCommandRequestTypeException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor">
            <summary>
            Defines an abstract implementation of <see cref="T:System.IObserver`1"/> that tracks <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> objects.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.Initialize">
            <summary>
            When overridden in a derived class, provides the opportunity to run custom initialization code for <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/>
            implementations. This method is called immediately after the <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/> instance is instantiated. Once the
            <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/> has been initialized, it exists for the lifetime of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>. 
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.ShouldTrack(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)">
            <summary>
            When overridden in a derived class, provides a way to filter which <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> objects should be tracked.
            By default, all activity events are tracked.
            </summary>
            <param name="activity">The <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> to examine.</param>
            <returns></returns>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnTrack(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)">
            <summary>
            When overridden in a derived class, tracks <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> objects. This method must not call the
            <see cref="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnNext(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)"/> method.
            </summary>
            <param name="activity">The <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> to track.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnNext(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)">
            <summary>
            Consumes <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> objects by delegating them to the <see cref="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnTrack(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)"/> method.
            This method should not be called from the <see cref="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnTrack(Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem)"/> method.
            </summary>
            <param name="activity">The <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> to consume.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnError(System.Exception)">
            <summary>
            When overridden in a derived class, handles exceptions thrown by a <see cref="T:System.IObservable`1"/> to which this <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/> is subscribed.
            By default, this method rethrows the <see cref="T:System.Exception"/>.
            </summary>
            <param name="error">The <see cref="T:System.Exception"/> to handle.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.OnCompleted">
            <summary>
            When overridden in a derived class, provides an opportunity to clean up any resources as a result of the event stream completing.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.Name">
            <summary>
            The name of this <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/>. If no name is specified, or if it is set
            to null or whitespace, then a new <see cref="T:System.Guid"/> is used.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor.Enabled">
            <summary>
            Specifies whether this <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.HyperNodeServiceActivityMonitor"/> is enabled.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext">
            <summary>
            Contains information from <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> objects being processed by <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.CommandName">
            <summary>
            The name of the command specified in the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.CreatedByAgentName">
            <summary>
            The name of the agent that created the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.CreationDateTime">
            <summary>
            The date and time at which the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> was created.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.IntendedRecipientNodeNames">
            <summary>
            The list of <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances to which the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/> was intended to be sent.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.SeenByNodeNames">
            <summary>
            The list of <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances that have already seen the <see cref="T:Hyper.NodeServices.Contracts.HyperNodeMessageRequest"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext.ProcessOptionFlags">
            <summary>
            The processing flags specified in the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem">
            <summary>
            Describes an <see cref="T:Hyper.Extensibility.ActivityTracking.IActivityItem"/> event raised by a <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.TaskId">
            <summary>
            The ID of the current task.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.CommandName">
            <summary>
            The name of the command currently executing.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.Elapsed">
            <summary>
            The amount of time that has elapsed since the first <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> was raised for this task.
            This value may be null unless diagnostics are enabled.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.EventData">
            <summary>
            An object representing data associated with this <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/>. This value may be null.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.ProgressPart">
            <summary>
            A numeric value representing the progress of a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>. This value may be used in conjunction
            with the <see cref="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.ProgressTotal"/> property to obtain a percentile.
            </summary>
        </member>
        <member name="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.ProgressTotal">
            <summary>
            A numeric value representing the progress total of a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>. This value may be used in conjunction
            with the <see cref="P:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem.ProgressPart"/> property to obtain a percentile.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker">
            <summary>
            Provides methods to raise <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> events from inside a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String)">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description.
            </summary>
            <param name="eventDescription">A description of the event.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String,System.String)">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description and detail.
            </summary>
            <param name="eventDescription">A description of the event.</param>
            <param name="eventDetail">A description providing more verbose details of the event.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String,System.String,System.Object)">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description and detail.
            This overload associates the specified object with the event data.
            </summary>
            <param name="eventDescription">A description of the event.</param>
            <param name="eventDetail">A description providing more verbose details of the event.</param>
            <param name="eventData">An object to be associated with the <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description and progress report.
            </summary>
            <param name="eventDescription">A description of the event.</param>
            <param name="progressPart">A numeric value representing the progress of the <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
            <param name="progressTotal">A numeric value representing the progress total of a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description, detail, and progress report.
            </summary>
            <param name="eventDescription">A description of the event.</param>
            <param name="eventDetail">A description providing more verbose details of the event.</param>
            <param name="progressPart">A numeric value representing the progress of the <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
            <param name="progressTotal">A numeric value representing the progress total of a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.Track(System.String,System.String,System.Object,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified description, detail, event data, and progress report.
            </summary>
            <param name="eventDescription">A description of the event.</param>
            <param name="eventDetail">A description providing more verbose details of the event.</param>
            <param name="eventData">An object to be associated with the <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/>.</param>
            <param name="progressPart">A numeric value representing the progress of the <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
            <param name="progressTotal">A numeric value representing the progress total of a <see cref="T:Hyper.NodeServices.Extensibility.CommandModules.ICommandModule"/>.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.TrackFormat(System.String,System.Object[])">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> with the specified format string and parameters.
            </summary>
            <param name="eventDescriptionFormat">A format string description of the event.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ActivityTracking.ITaskActivityTracker.TrackException(System.Exception)">
            <summary>
            Raises an <see cref="T:Hyper.NodeServices.Extensibility.ActivityTracking.IHyperNodeActivityEventItem"/> containing information about the specified <see cref="T:System.Exception"/>.
            The value of the <see cref="P:System.Exception.Message"/> property is stored in the <see cref="!:IHyperNodeActivityEventItem.EventDescription"/> property, and
            the result of calling <see cref="M:System.Exception.ToString"/> is stored in the <see cref="!:IHyperNodeActivityEventItem.EventDetail"/> property.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to track.</param>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.TaskIdProviderBase">
            <summary>
            Abstract implementation of <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/>.
            </summary>
        </member>
        <member name="T:Hyper.NodeServices.Extensibility.ITaskIdProvider">
            <summary>
            Creates IDs for tasks initiated by <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/> instances. The Task ID must be unique relative to all other tasks that are currently executing.
            Once a task has completed, its ID may be reused.
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ITaskIdProvider.Initialize">
            <summary>
            Provides the opportunity to run custom initialization code for <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/> implementations. This method is called
            immediately after the <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/> instance is instantiated. Once the <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/> has been initialized,
            it exists for the lifetime of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>. 
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.ITaskIdProvider.CreateTaskId(Hyper.NodeServices.Extensibility.IHyperNodeMessageContext)">
            <summary>
            Creates a Task ID using the specified <see cref="T:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext"/> object. This method must be overridden in a derived class.
            </summary>
            <param name="context">The <see cref="T:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext"/> to use.</param>
            <returns></returns>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.TaskIdProviderBase.Initialize">
            <summary>
            When overridden in a derived class, provides the opportunity to run custom initialization code for <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/>
            implementations. This method is called immediately after the <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/> instance is instantiated. Once the
            <see cref="T:Hyper.NodeServices.Extensibility.ITaskIdProvider"/> has been initialized, it exists for the lifetime of the <see cref="T:Hyper.NodeServices.Contracts.IHyperNodeService"/>. 
            </summary>
        </member>
        <member name="M:Hyper.NodeServices.Extensibility.TaskIdProviderBase.CreateTaskId(Hyper.NodeServices.Extensibility.IHyperNodeMessageContext)">
            <summary>
            Creates a Task ID using the specified <see cref="T:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext"/> object. This method must be overridden in a derived class.
            </summary>
            <param name="context">The <see cref="T:Hyper.NodeServices.Extensibility.IHyperNodeMessageContext"/> to use.</param>
            <returns></returns>
        </member>
    </members>
</doc>
